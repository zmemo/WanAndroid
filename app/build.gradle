apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        applicationId Config.applicationId
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        testInstrumentationRunner Config.androidJunitRunner
        multiDexEnabled true
        resConfigs "zh"
    }

    signingConfigs {
        sign {
            keyAlias 'iFrame'
            keyPassword "zhoumemo"
            storeFile file('iFrame.jks')
            storePassword "zhoumemo"
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            signingConfig signingConfigs.sign
            applicationIdSuffix '.debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def time = new Date().format("MM-dd_HH-mm", TimeZone.getDefault())
                    outputFileName = "debug-v${variant.versionName}-${time}.apk"
                }
            }
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.sign
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def time = new Date().format("MM-dd_HH-mm", TimeZone.getDefault())
                    outputFileName = "release-v${variant.versionName}-${time}.apk"
                }
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    kapt DepConfig.arouterCompiler

    if (!ModuleConfig.isModuleUiRunAlone) implementation project(path: ':common:moduleUi')
    if (!ModuleConfig.isModuleOtherRunAlone) implementation project(path: ':business:moduleOther')
    if (!ModuleConfig.isModuleHomeRunAlone) implementation project(path: ':business:moduleHome')
    if (!ModuleConfig.isModuleProjectRunAlone) implementation project(path: ':business:moduleProject')
    if (!ModuleConfig.isModuleSystemRunAlone) implementation project(path: ':business:moduleSystem')
    if (!ModuleConfig.isModuleBlogRunAlone) implementation project(path: ':business:moduleBlog')
    if (!ModuleConfig.isModuleMineRunAlone) implementation project(path: ':business:moduleMine')
}
